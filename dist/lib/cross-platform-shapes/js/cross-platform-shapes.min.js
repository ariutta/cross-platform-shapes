var crossPlatformShapesNS=crossPlatformShapesNS||{};crossPlatformShapesNS["markers.svg"]='<svg id="markers" version="1.1" baseProfile="full" xmlns="http://www.w3.org/1999/xlink" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ev="http://www.w3.org/2001/xml-events" preserveAspectRatio="xMidYMid">\n<g>\n<desc>This SVG file contains a set of markers that can be duplicated for other colors.</desc>\n</g>\n<title>markers</title>\n<defs>\n<marker id="shape-library-markers-arrow-svg-start-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="0" refY="6"><g id="g-src-shape-library-markers-arrow-svg-start-default" class="solid-stroke default-fill-color">\n\n	<!-- arrow markers: triangular polygons, no stroke -->\n\n	<rect class="board-fill-color" stroke="none" x="0" y="5.4" width="2" height="1.2"></rect>\n	<polygon stroke-width="0" points="12,11 0,6 12,1"></polygon>\n\n</g></marker>\n<marker id="shape-library-markers-arrow-svg-end-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="12" refY="6"><g id="g-src-shape-library-markers-arrow-svg-end-default" class="solid-stroke default-fill-color" transform="rotate(180, 6, 6)">\n\n	<!-- arrow markers: triangular polygons, no stroke -->\n\n	<rect class="board-fill-color" stroke="none" x="0" y="5.4" width="2" height="1.2"></rect>\n	<polygon stroke-width="0" points="12,11 0,6 12,1"></polygon>\n\n</g></marker>\n<marker id="shape-library-markers-mim-necessary-stimulation-svg-start-default" preserveAspectRatio="none" viewBox="0 0 16 12" markerWidth="16" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="0" refY="6">\n<g id="g-src-shape-library-markers-mim-necessary-stimulation-svg-start-default" class="board-fill-color default-stroke-color solid-stroke">\n\n	<!-- mim-necessary-stimulation markers: triangular polygons, drawing-board fill, default color stroke; and vertical line -->\n\n	<rect class="board-fill-color" stroke="none" x="0" y="5.4" width="2" height="1.2"></rect>\n	<line fill="none" stroke-width="1" x1="14" y1="0" x2="14" y2="12"></line>\n	<line fill="none" stroke="none" x1="16" y1="6" x2="16" y2="6"></line> <!-- dummy point -->\n	<polygon stroke-width="1" points="0,6 9,11 9,1"></polygon>\n\n</g></marker>\n<marker id="shape-library-markers-mim-necessary-stimulation-svg-end-default" preserveAspectRatio="none" viewBox="0 0 16 12" markerWidth="16" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="16" refY="6"><g id="g-src-shape-library-markers-mim-necessary-stimulation-svg-end-default" class="board-fill-color default-stroke-color solid-stroke" transform="rotate(180, 8, 6)">\n\n	<!-- mim-necessary-stimulation markers: triangular polygons, drawing-board fill, default color stroke; and vertical line -->\n\n	<rect class="board-fill-color" stroke="none" x="0" y="5.4" width="2" height="1.2"></rect>\n	<line fill="none" stroke-width="1" x1="14" y1="0" x2="14" y2="12"></line>\n	<line fill="none" stroke="none" x1="16" y1="6" x2="16" y2="6"></line> <!-- dummy point -->\n	<polygon stroke-width="1" points="0,6 9,11 9,1"></polygon>\n\n</g></marker>\n<marker id="shape-library-markers-mim-binding-svg-start-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="0" refY="6"><g id="g-src-shape-library-markers-mim-binding-svg-start-default" class="solid-stroke default-fill-color">\n\n	<!-- mim-binding markers: four-point polygon, no stroke -->\n\n	<rect class="board-fill-color" stroke="none" x="0" y="5.4" width="2" height="1.2"></rect>\n	<polygon stroke-width="0" points="12,12 0,6 12,0 5,6 "></polygon>\n\n</g></marker>\n<marker id="shape-library-markers-mim-binding-svg-end-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="12" refY="6"><g id="g-src-shape-library-markers-mim-binding-svg-end-default" class="solid-stroke default-fill-color" transform="rotate(180, 6, 6)">\n\n	<!-- mim-binding markers: four-point polygon, no stroke -->\n\n	<rect class="board-fill-color" stroke="none" x="0" y="5.4" width="2" height="1.2"></rect>\n	<polygon stroke-width="0" points="12,12 0,6 12,0 5,6 "></polygon>\n\n</g></marker>\n<marker id="shape-library-markers-mim-conversion-svg-start-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="0" refY="6"><g id="g-src-shape-library-markers-mim-conversion-svg-start-default" class="solid-stroke default-fill-color">\n\n	<!-- mim-conversion markers: triangular polygons, no stroke -->\n\n	<rect class="board-fill-color" stroke="none" x="0" y="5.4" width="2" height="1.2"></rect>\n	<polygon stroke-width="0" points="12,11 0,6 12,1"></polygon>\n\n</g></marker>\n<marker id="shape-library-markers-mim-conversion-svg-end-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="12" refY="6"><g id="g-src-shape-library-markers-mim-conversion-svg-end-default" class="solid-stroke default-fill-color" transform="rotate(180, 6, 6)">\n\n	<!-- mim-conversion markers: triangular polygons, no stroke -->\n\n	<rect class="board-fill-color" stroke="none" x="0" y="5.4" width="2" height="1.2"></rect>\n	<polygon stroke-width="0" points="12,11 0,6 12,1"></polygon>\n\n</g></marker>\n<marker id="shape-library-markers-mim-stimulation-svg-start-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="0" refY="6"><g id="g-src-shape-library-markers-mim-stimulation-svg-start-default" class="board-fill-color default-stroke-color solid-stroke">\n\n	<!-- mim-stimulation markers: triangular polygons, drawing-board fill, default color stroke -->\n\n	<rect class="board-fill-color" stroke="none" x="0" y="5.4" width="2" height="1.2"></rect>\n	<line stroke="none" fill="none" x1="12" y1="6" x2="12" y2="6"></line> <!-- dummy point -->\n	<polygon stroke-width="1" points="0,6 11,11 11,1"></polygon>\n\n</g></marker><marker id="shape-library-markers-mim-stimulation-svg-end-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="12" refY="6"><g id="g-src-shape-library-markers-mim-stimulation-svg-end-default" class="board-fill-color default-stroke-color solid-stroke" transform="rotate(180, 6, 6)">\n\n	<!-- mim-stimulation markers: triangular polygons, drawing-board fill, default color stroke -->\n\n	<rect class="board-fill-color" stroke="none" x="0" y="5.4" width="2" height="1.2"></rect>\n	<line stroke="none" fill="none" x1="12" y1="6" x2="12" y2="6"></line> <!-- dummy point -->\n	<polygon stroke-width="1" points="0,6 11,11 11,1"></polygon>\n\n</g></marker><marker id="shape-library-markers-mim-modification-svg-start-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="0" refY="6"><g id="g-src-shape-library-markers-mim-modification-svg-start-default" class="default-fill-color solid-stroke">\n\n	<!-- mim-modification markers: four-point polygon, no stroke -->\n\n	<rect class="board-fill-color" stroke="none" x="0" y="5.4" width="2" height="1.2"></rect>\n	<polygon stroke-width="0" points="12,12 0,6 12,0 5,6 "></polygon>\n\n</g></marker><marker id="shape-library-markers-mim-modification-svg-end-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="12" refY="6"><g id="g-src-shape-library-markers-mim-modification-svg-end-default" class="default-fill-color solid-stroke" transform="rotate(180, 6, 6)">\n\n	<!-- mim-modification markers: four-point polygon, no stroke -->\n\n	<rect class="board-fill-color" stroke="none" x="0" y="5.4" width="2" height="1.2"></rect>\n	<polygon stroke-width="0" points="12,12 0,6 12,0 5,6 "></polygon>\n\n</g></marker><marker id="shape-library-markers-mim-catalysis-svg-start-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="0" refY="6"><g id="g-src-shape-library-markers-mim-catalysis-svg-start-default" class="board-fill-color default-stroke-color solid-stroke">\n\n	<!-- mim-catalysis markers: circle, drawing-board fill and default color stroke -->\n\n	<circle cx="6.0" cy="6" r="5.3px" stroke-width="1px"></circle>\n\n</g></marker><marker id="shape-library-markers-mim-catalysis-svg-end-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="12" refY="6"><g id="g-src-shape-library-markers-mim-catalysis-svg-end-default" class="board-fill-color default-stroke-color solid-stroke" transform="rotate(180, 6, 6)">\n\n	<!-- mim-catalysis markers: circle, drawing-board fill and default color stroke -->\n\n	<circle cx="6.0" cy="6" r="5.3px" stroke-width="1px"></circle>\n\n</g></marker><marker id="shape-library-markers-mim-inhibition-svg-start-default" preserveAspectRatio="none" viewBox="0 0 10 20" markerWidth="10" markerHeight="20" markerUnits="strokeWidth" orient="auto" refX="0" refY="10"><g id="g-src-shape-library-markers-mim-inhibition-svg-start-default" class="board-fill-color default-stroke-color solid-stroke">\n\n	<!-- mim-inhibition markers: vertical line; and extended drawing-board rect -->\n	\n	<rect stroke="none" x="0" y="9" width="8" height="2"></rect>\n	<line fill="none" stroke-width="1.8" x1="7" y1="0" x2="7" y2="20"></line>\n\n</g></marker><marker id="shape-library-markers-mim-inhibition-svg-end-default" preserveAspectRatio="none" viewBox="0 0 10 20" markerWidth="10" markerHeight="20" markerUnits="strokeWidth" orient="auto" refX="10" refY="10"><g id="g-src-shape-library-markers-mim-inhibition-svg-end-default" class="board-fill-color default-stroke-color solid-stroke" transform="rotate(180, 5, 10)">\n\n	<!-- mim-inhibition markers: vertical line; and extended drawing-board rect -->\n	\n	<rect stroke="none" x="0" y="9" width="8" height="2"></rect>\n	<line fill="none" stroke-width="1.8" x1="7" y1="0" x2="7" y2="20"></line>\n\n</g></marker><marker id="shape-library-markers-mim-cleavage-svg-start-default" preserveAspectRatio="none" viewBox="0 0 20 30" markerWidth="20" markerHeight="30" markerUnits="strokeWidth" orient="auto" refX="9" refY="15"><g id="g-src-shape-library-markers-mim-cleavage-svg-start-default" class="board-fill-color default-stroke-color solid-stroke">\n\n	<!-- mim-cleavage markers: two lines and extended drawing-board rect -->\n\n	<rect stroke="none" x="0" y="14.3" width="18.4" height="1.4"></rect>\n	<line fill="none" stroke-width="1" x1="18" y1="14.5" x2="18" y2="30"></line>	\n	<line fill="none" stroke-width="1" x1="18" y1="30" x2="0" y2="0"></line>	\n\n\n</g></marker><marker id="shape-library-markers-mim-cleavage-svg-end-default" preserveAspectRatio="none" viewBox="0 0 20 30" markerWidth="20" markerHeight="30" markerUnits="strokeWidth" orient="auto" refX="10" refY="15"><g id="g-src-shape-library-markers-mim-cleavage-svg-end-default" class="board-fill-color default-stroke-color solid-stroke" transform="rotate(180, 10, 15)">\n\n	<!-- mim-cleavage markers: two lines and extended drawing-board rect -->\n\n	<rect stroke="none" x="0" y="14.3" width="18.4" height="1.4"></rect>\n	<line fill="none" stroke-width="1" x1="18" y1="14.5" x2="18" y2="30"></line>	\n	<line fill="none" stroke-width="1" x1="18" y1="30" x2="0" y2="0"></line>	\n\n\n</g></marker><marker id="shape-library-markers-mim-covalent-bond-svg-start-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="-0.5" refY="6"><g id="g-src-shape-library-markers-mim-covalent-bond-svg-start-default" class="solid-stroke default-fill-color">\n\n	<!-- mim-covalent-bond markers: not much to see here! -->\n	<rect x="0" y="0" width="0" height="0" stroke="none" fill="none" stroke-width="0"></rect>\n\n</g></marker><marker id="shape-library-markers-mim-covalent-bond-svg-end-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="11" refY="6"><g id="g-src-shape-library-markers-mim-covalent-bond-svg-end-default" class="solid-stroke default-fill-color" transform="rotate(180, 6, 6)">\n\n	<!-- mim-covalent-bond markers: not much to see here! -->\n	<rect x="0" y="0" width="0" height="0" stroke="none" fill="none" stroke-width="0"></rect>\n\n</g></marker><marker id="shape-library-markers-mim-transcription-translation-svg-start-default" preserveAspectRatio="none" viewBox="0 0 20 24" markerWidth="20" markerHeight="24" markerUnits="strokeWidth" orient="auto" refX="0" refY="12"><g id="g-src-shape-library-markers-mim-transcription-translation-svg-start-default" class="board-fill-color default-stroke-color solid-stroke">\n\n	<!-- mim-transcription-translation markers: two lines and an open trigular polygon, plus extended drawing-board rect -->\n\n	<rect stroke="none" x="0" y="11" width="12" height="2"></rect>\n	<line fill="none" stroke-width="1" x1="15" y1="12" x2="15" y2="5"></line>\n	<line fill="none" stroke-width="1" x1="15.5" y1="5" x2="8" y2="5"></line>\n	<polygon stroke-width="1" points="0,5 8,1 8,9"></polygon>\n\n</g></marker><marker id="shape-library-markers-mim-transcription-translation-svg-end-default" preserveAspectRatio="none" viewBox="0 0 20 24" markerWidth="20" markerHeight="24" markerUnits="strokeWidth" orient="auto" refX="20" refY="12"><g id="g-src-shape-library-markers-mim-transcription-translation-svg-end-default" class="board-fill-color default-stroke-color solid-stroke" transform="rotate(180, 10, 12)">\n\n	<!-- mim-transcription-translation markers: two lines and an open trigular polygon, plus extended drawing-board rect -->\n\n	<rect stroke="none" x="0" y="11" width="12" height="2"></rect>\n	<line fill="none" stroke-width="1" x1="15" y1="12" x2="15" y2="5"></line>\n	<line fill="none" stroke-width="1" x1="15.5" y1="5" x2="8" y2="5"></line>\n	<polygon stroke-width="1" points="0,5 8,1 8,9"></polygon>\n\n</g></marker><marker id="shape-library-markers-mim-gap-svg-start-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="0" refY="6"><g id="g-src-shape-library-markers-mim-gap-svg-start-default" class="board-fill-color solid-stroke">\n\n	<!-- mim-gap markers: just an extended drawing-board rect -->\n	<!-- \n	TODO This could be refactored to make the shape match the viewbox.\n	It can overlap the side of the shape, blanking out a small part of it when the edge is at an angle.\n	-->\n\n	<rect stroke="none" x="0" y="5.3" width="8" height="1.4"></rect>\n\n</g></marker><marker id="shape-library-markers-mim-gap-svg-end-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="12" refY="6"><g id="g-src-shape-library-markers-mim-gap-svg-end-default" class="board-fill-color solid-stroke" transform="rotate(180, 6, 6)">\n\n	<!-- mim-gap markers: just an extended drawing-board rect -->\n	<!-- \n	TODO This could be refactored to make the shape match the viewbox.\n	It can overlap the side of the shape, blanking out a small part of it when the edge is at an angle.\n	-->\n\n	<rect stroke="none" x="0" y="5.3" width="8" height="1.4"></rect>\n\n</g></marker><marker id="shape-library-markers-t-bar-svg-start-default" preserveAspectRatio="none" viewBox="0 0 10 20" markerWidth="10" markerHeight="20" markerUnits="strokeWidth" orient="auto" refX="0" refY="10"><g id="g-src-shape-library-markers-t-bar-svg-start-default" class="board-fill-color default-stroke-color solid-stroke">\n\n        <!-- t-bar markers: vertical line; and extended drawing-board rect -->\n	\n	<rect stroke="none" x="0" y="9" width="8" height="2"></rect>\n	<line fill="none" stroke-width="1.8" x1="7" y1="0" x2="7" y2="20"></line>\n\n</g></marker><marker id="shape-library-markers-t-bar-svg-end-default" preserveAspectRatio="none" viewBox="0 0 10 20" markerWidth="10" markerHeight="20" markerUnits="strokeWidth" orient="auto" refX="10" refY="10"><g id="g-src-shape-library-markers-t-bar-svg-end-default" class="board-fill-color default-stroke-color solid-stroke" transform="rotate(180, 5, 10)">\n\n        <!-- t-bar markers: vertical line; and extended drawing-board rect -->\n	\n	<rect stroke="none" x="0" y="9" width="8" height="2"></rect>\n	<line fill="none" stroke-width="1.8" x1="7" y1="0" x2="7" y2="20"></line>\n\n</g></marker><marker id="shape-library-markers-none-svg-start-default" preserveAspectRatio="none" viewBox="0 0 0 0" markerWidth="0" markerHeight="0" markerUnits="strokeWidth" orient="auto" refX="0" refY="6"><g id="g-src-shape-library-markers-none-svg-start-default" class="board-fill-color board-stroke-color node shape">\n\n	<rect x="0" y="0" width="0" height="0" stroke="none" fill="none" stroke-width="0"></rect>\n\n</g></marker><marker id="shape-library-markers-none-svg-end-default" preserveAspectRatio="none" viewBox="0 0 0 0" markerWidth="0" markerHeight="0" markerUnits="strokeWidth" orient="auto" refX="11" refY="6"><g id="g-src-shape-library-markers-none-svg-end-default" class="board-fill-color board-stroke-color node shape" transform="rotate(180, 0, 0)">\n\n	<rect x="0" y="0" width="0" height="0" stroke="none" fill="none" stroke-width="0"></rect>\n\n</g></marker><marker id="shape-library-markers-mim-branching-left-svg-start-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="0.4" refY="6"><g id="g-src-shape-library-markers-mim-branching-left-svg-start-default" class="board-fill-color default-stroke-color solid-stroke">\n\n	<!-- mim-branching-left markers: line and extended drawing-board rect -->\n\n	<rect stroke="none" x="0.4" y="5.3" width="3.1" height="1.4"></rect>\n	<line fill="none" stroke-width="1" x1="3.9" y1="6.2" x2="0.2" y2="0"></line>	\n\n</g></marker><marker id="shape-library-markers-mim-branching-left-svg-end-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="11.6" refY="6"><g id="g-src-shape-library-markers-mim-branching-left-svg-end-default" class="board-fill-color default-stroke-color solid-stroke" transform="rotate(180, 6, 6)">\n\n	<!-- mim-branching-left markers: line and extended drawing-board rect -->\n\n	<rect stroke="none" x="0.4" y="5.3" width="3.1" height="1.4"></rect>\n	<line fill="none" stroke-width="1" x1="3.9" y1="6.2" x2="0.2" y2="0"></line>	\n\n</g></marker><marker id="shape-library-markers-mim-branching-right-svg-start-default" preserveAspectRatio="none" viewBox="0 0 4 12" markerWidth="4" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="0.4" refY="6"><g id="g-src-shape-library-markers-mim-branching-right-svg-start-default" class="board-fill-color default-stroke-color solid-stroke">\n\n	<!-- mim-branching-right markers: line and extended drawing-board rect -->\n\n	<rect stroke="none" x="0.4" y="5.3" width="3.1" height="1.4"></rect>\n	<line fill="none" stroke-width="1" x1="0.2" y1="12" x2="3.9" y2="5.8"></line>	\n\n</g></marker><marker id="shape-library-markers-mim-branching-right-svg-end-default" preserveAspectRatio="none" viewBox="0 0 4 12" markerWidth="4" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="3.6" refY="6"><g id="g-src-shape-library-markers-mim-branching-right-svg-end-default" class="board-fill-color default-stroke-color solid-stroke" transform="rotate(180, 2, 6)">\n\n	<!-- mim-branching-right markers: line and extended drawing-board rect -->\n\n	<rect stroke="none" x="0.4" y="5.3" width="3.1" height="1.4"></rect>\n	<line fill="none" stroke-width="1" x1="0.2" y1="12" x2="3.9" y2="5.8"></line>	\n\n</g>\n</marker>\n<style type="text/css">	\n	/* default color for pathway elements */\n	.default-fill-color {\n		fill: black; \n	}\n	.default-stroke-color {\n		stroke: black;\n	}\n	\n	/* default color of the background drawing board */ 	\n	.board-fill-color {\n		fill: white;\n	}\n	.board-stroke-color {\n		stroke: white;\n	}\n\n	marker {\n		/* this is what should work per the spec\n		   stroke-dasharray: none; */\n		/* but I need to add this to make it work in Safari */\n		stroke-dasharray: 9999999999999999999999999;\n	}\n</style>\n</defs>\n</svg>\n',window.crossPlatformShapes={init:function(args,callback){var customShapes=args.customShapes,crossPlatformShapesInstance=this;this.svg.crossPlatformShapesInstance=this.svg.path.crossPlatformShapesInstance=crossPlatformShapesInstance;var format,targetSelector=args.targetSelector,target=document.querySelector(targetSelector),targetTagName=target.tagName.toLowerCase(),targetSelection=d3.select(target);"div"===targetTagName?(format=args.format,this[format].targetSelection=targetSelection,this.setFormat(format,customShapes,targetTagName,targetSelection),crossPlatformShapesInstance[format].init(args,function(viewport){callback&&callback(viewport)})):(format=targetTagName,this[format].targetImageSelection=targetSelection,this.setFormat(format,customShapes,targetTagName,targetSelection),this[format].init(args,function(viewport){callback&&callback(viewport)}))},setFormat:function(format,customShapes,targetTagName){var crossPlatformShapesInstance=this;this[format].targetTagName=targetTagName;var presetShapesNames=["arc","arrow","brace","complex","endoplasmicReticulum","golgiApparatus","hexagon","lineCurved","lineElbow","lineSegmented","lineStraight","mimDegradation","mitochondria","ellipseDouble","ellipse","pentagon","rectangle","roundedRectangleDouble","roundedRectangle","sarcoplasmicReticulum","triangle","mimNecessaryStimulation","mimBinding","mimConversion","mimStimulation","mimModification","mimCatalysis","mimInhibition","mimCleavage","mimCovalentBond","mimTranscriptionTranslation","mimGap","tBar","mimBranchingLeft","mimBranchingRight"];presetShapesNames.forEach(function(presetShapeName){crossPlatformShapesInstance[presetShapeName]=function(data,callback){return crossPlatformShapesInstance[format].path.render(presetShapeName,data,callback)}}),customShapes&&(crossPlatformShapesInstance.customShapes=customShapes,crossPlatformShapesInstance[format].image.customShapes=customShapes,d3.map(customShapes).keys().forEach(function(customShapeName){crossPlatformShapesInstance[customShapeName]=function(data,callback){return crossPlatformShapesInstance[format].image.render(customShapeName,data,callback)}}))}},crossPlatformShapes.pathCalculator={},crossPlatformShapes.pathCalculator.arc=function(data){"use strict";var x=data.x,y=data.y,width=data.width,height=data.height,yControlPoint=height*(2/3),pathData=[{command:"moveTo",points:[x,y]},{command:"bezierCurveTo",points:[x,y+yControlPoint,x+width,y+yControlPoint,x+width,y]}];return pathData},crossPlatformShapes.pathCalculator.arrow=function(data){"use strict";var x=data.x,y=data.y,width=data.width,height=data.height,pathData=[{command:"moveTo",points:[x,y]},{command:"lineTo",points:[x+width,y+height/2]},{command:"lineTo",points:[x,y+height]},{command:"closePath",points:[]}];return pathData},crossPlatformShapes.pathCalculator.brace=function(data){"use strict";var x=data.x,y=data.y,width=data.width,height=data.height,pathData=[{command:"moveTo",points:[x,y+height]},{command:"bezierCurveTo",points:[x,y,x+width/2,y+height,x+width/2,y]},{command:"bezierCurveTo",points:[x+width/2,y+height,x+width,y,x+width,y+height]}];return pathData},crossPlatformShapes.pathCalculator.complex=function(data){"use strict";var x=data.x,y=data.y,width=data.width,height=data.height,pathData=[{command:"moveTo",points:[x+18,y]},{command:"lineTo",points:[x+width-18,y]},{command:"lineTo",points:[x+width,y+18]},{command:"lineTo",points:[x+width,y+height-18]},{command:"lineTo",points:[x+width-18,y+height]},{command:"lineTo",points:[x+18,y+height]},{command:"lineTo",points:[x,y+height-18]},{command:"lineTo",points:[x,y+18]},{command:"closePath",points:[]}];return pathData},crossPlatformShapes.pathCalculator.endoplasmicReticulum=function(data){"use strict";var x=data.x,y=data.y,width=data.width,height=data.height,pathData=[{command:"moveTo",points:[x,y]},{command:"lineTo",points:[x+width,y]},{command:"lineTo",points:[x+width,y+height]},{command:"lineTo",points:[x,y+height]},{command:"closePath",points:[]}];return pathData},crossPlatformShapes.pathCalculator.golgiApparatus=function(data){"use strict";var x=data.x,y=data.y,width=data.width,height=data.height,pathData=[{command:"moveTo",points:[x,y]},{command:"lineTo",points:[x+width,y]},{command:"lineTo",points:[x+width,y+height]},{command:"lineTo",points:[x,y+height]},{command:"closePath",points:[]}];return pathData},crossPlatformShapes.pathCalculator.hexagon=function(data){"use strict";var x=data.x,y=data.y,width=data.width,height=data.height,pathData=[{command:"moveTo",points:[x,y]},{command:"lineTo",points:[x+width,y]},{command:"lineTo",points:[x+width,y+height]},{command:"lineTo",points:[x,y+height]},{command:"closePath",points:[]}];return pathData},crossPlatformShapes.pathCalculator.lineCurved=function(data){"use strict";var svgCurve=d3.svg.line().x(function(d){return d.x}).y(function(d){return d.y}).interpolate("basis"),pathData=svgCurve(data.points);return pathData},crossPlatformShapes.pathCalculator.lineElbow=function(data){"use strict";var svgLine=d3.svg.line().x(function(d){return d.x}).y(function(d){return d.y}).interpolate("linear"),pathData=svgLine(data.points);return pathData},crossPlatformShapes.pathCalculator.lineSegmented=function(data){"use strict";var svgLine=d3.svg.line().x(function(d){return d.x}).y(function(d){return d.y}).interpolate("linear"),pathData=svgLine(data.points);return pathData},crossPlatformShapes.pathCalculator.lineStraight=function(data){"use strict";var x0=data.points[0].x,y0=data.points[0].y,x1=data.points[1].x,y1=data.points[1].y,pathData=[{command:"moveTo",points:[x0,y0]},{command:"lineTo",points:[x1,y1]}];return pathData},crossPlatformShapes.pathCalculator.mimDegradation=function(data){"use strict";var x=data.x,y=data.y,width=data.width,height=data.height,ellipse=crossPlatformShapes.pathCalculator.ellipse(data),line=[{command:"moveTo",points:[x,y]},{command:"lineTo",points:[x+width,y+height]}],pathData=ellipse.concat(line);return pathData},crossPlatformShapes.pathCalculator.mitochondria=function(data){"use strict";var outerEllipse=(data.x,data.y,data.width,data.height,crossPlatformShapes.pathCalculator.ellipse(data)),pathData=outerEllipse;return pathData},crossPlatformShapes.pathCalculator.ellipseDouble=function(data){"use strict";var outerEllipse=crossPlatformShapes.pathCalculator.ellipse(data),innerEllipseData=data,doubleLineGap=2*data.borderWidth||6;innerEllipseData.x=data.x+doubleLineGap,innerEllipseData.y=data.y+doubleLineGap,innerEllipseData.width=data.width-2*doubleLineGap,innerEllipseData.height=data.height-2*doubleLineGap;var innerEllipse=crossPlatformShapes.pathCalculator.ellipse(innerEllipseData),pathData=outerEllipse.concat(innerEllipse);return pathData},crossPlatformShapes.pathCalculator.ellipse=function(data){"use strict";var x=data.x,y=data.y,width=data.width,height=data.height,cx=x+width/2,cy=y+height/2,width_two_thirds=2*width/3,height_over_2=height/2,pathData=[{command:"moveTo",points:[cx,cy-height_over_2]},{command:"bezierCurveTo",points:[cx+width_two_thirds,cy-height_over_2,cx+width_two_thirds,cy+height_over_2,cx,cy+height_over_2]},{command:"bezierCurveTo",points:[cx-width_two_thirds,cy+height_over_2,cx-width_two_thirds,cy-height_over_2,cx,cy-height_over_2]}];return pathData},crossPlatformShapes.pathCalculator.pentagon=function(data){"use strict";var x=data.x,y=data.y,width=data.width,height=data.height,pathData=[{command:"moveTo",points:[x,y]},{command:"lineTo",points:[x+width,y]},{command:"lineTo",points:[x+width,y+height]},{command:"lineTo",points:[x,y+height]},{command:"closePath",points:[]}];return pathData},crossPlatformShapes.pathCalculator.rectangle=function(data){"use strict";var x=data.x,y=data.y,width=data.width,height=data.height,pathData=[{command:"moveTo",points:[x,y]},{command:"lineTo",points:[x+width,y]},{command:"lineTo",points:[x+width,y+height]},{command:"lineTo",points:[x,y+height]},{command:"closePath",points:[]}];return pathData},crossPlatformShapes.pathCalculator.roundedRectangleDouble=function(data){"use strict";var x=data.x,y=data.y,width=data.width,height=data.height,borderWidth=data.borderWidth,outerRoundedRectangle=crossPlatformShapes.pathCalculator.roundedRectangle(data),innerRoundedRectangleData=data,doubleLineGap=2*borderWidth||6;innerRoundedRectangleData.x=x+doubleLineGap,innerRoundedRectangleData.y=y+doubleLineGap,innerRoundedRectangleData.width=width-2*doubleLineGap,innerRoundedRectangleData.height=height-2*doubleLineGap;var innerRoundedRectangle=crossPlatformShapes.pathCalculator.roundedRectangle(innerRoundedRectangleData),pathData=outerRoundedRectangle.concat(innerRoundedRectangle);return pathData},crossPlatformShapes.pathCalculator.roundedRectangle=function(data){"use strict";var x=data.x,y=data.y,width=data.width,height=data.height,pathData=[{command:"moveTo",points:[x,y+10]},{command:"bezierCurveTo",points:[x,y+10-5.43379,x+4.56621,y,x+10,y]},{command:"lineTo",points:[x+width-10,y]},{command:"bezierCurveTo",points:[x+width-10+5.43379,y,x+width,y+4.56621,x+width,y+10]},{command:"lineTo",points:[x+width,y+height-10]},{command:"bezierCurveTo",points:[x+width,y+height-10+5.43379,x+width-4.56621,y+height,x+width-10,y+height]},{command:"lineTo",points:[x+10,y+height]},{command:"bezierCurveTo",points:[x+10-5.43379,y+height,x,y+height-4.56621,x,y+height-10]},{command:"closePath",points:[]}];return pathData},crossPlatformShapes.pathCalculator.sarcoplasmicReticulum=function(data){"use strict";var x=data.x,y=data.y,width=data.width,height=data.height,pathData=[{command:"moveTo",points:[x,y]},{command:"lineTo",points:[x+width,y]},{command:"lineTo",points:[x+width,y+height]},{command:"lineTo",points:[x,y+height]},{command:"closePath",points:[]}];return pathData},crossPlatformShapes.pathCalculator.triangle=function(data){"use strict";var x=data.x,y=data.y,width=data.width,height=data.height,pathData=[{command:"moveTo",points:[x,y]},{command:"lineTo",points:[x+width,y]},{command:"lineTo",points:[x+width,y+height]},{command:"lineTo",points:[x,y+height]},{command:"closePath",points:[]}];return pathData},crossPlatformShapes.pathCalculator.arc=function(data){"use strict";var x=data.x,y=data.y,width=data.width,height=data.height,yControlPoint=height*(2/3),pathData=[{command:"moveTo",points:[x,y]},{command:"bezierCurveTo",points:[x,y+yControlPoint,x+width,y+yControlPoint,x+width,y]}];return pathData},crossPlatformShapes.pathCalculator.arc=function(data){"use strict";var x=data.x,y=data.y,width=data.width,height=data.height,yControlPoint=height*(2/3),pathData=[{command:"moveTo",points:[x,y]},{command:"bezierCurveTo",points:[x,y+yControlPoint,x+width,y+yControlPoint,x+width,y]}];return pathData},crossPlatformShapes.pathCalculator.arc=function(data){"use strict";var x=data.x,y=data.y,width=data.width,height=data.height,yControlPoint=height*(2/3),pathData=[{command:"moveTo",points:[x,y]},{command:"bezierCurveTo",points:[x,y+yControlPoint,x+width,y+yControlPoint,x+width,y]}];return pathData},crossPlatformShapes.pathCalculator.arc=function(data){"use strict";var x=data.x,y=data.y,width=data.width,height=data.height,yControlPoint=height*(2/3),pathData=[{command:"moveTo",points:[x,y]},{command:"bezierCurveTo",points:[x,y+yControlPoint,x+width,y+yControlPoint,x+width,y]}];return pathData},crossPlatformShapes.pathCalculator.arc=function(data){"use strict";var x=data.x,y=data.y,width=data.width,height=data.height,yControlPoint=height*(2/3),pathData=[{command:"moveTo",points:[x,y]},{command:"bezierCurveTo",points:[x,y+yControlPoint,x+width,y+yControlPoint,x+width,y]}];
return pathData},crossPlatformShapes.pathCalculator.arc=function(data){"use strict";var x=data.x,y=data.y,width=data.width,height=data.height,yControlPoint=height*(2/3),pathData=[{command:"moveTo",points:[x,y]},{command:"bezierCurveTo",points:[x,y+yControlPoint,x+width,y+yControlPoint,x+width,y]}];return pathData},crossPlatformShapes.pathCalculator.arc=function(data){"use strict";var x=data.x,y=data.y,width=data.width,height=data.height,yControlPoint=height*(2/3),pathData=[{command:"moveTo",points:[x,y]},{command:"bezierCurveTo",points:[x,y+yControlPoint,x+width,y+yControlPoint,x+width,y]}];return pathData},crossPlatformShapes.pathCalculator.arc=function(data){"use strict";var x=data.x,y=data.y,width=data.width,height=data.height,yControlPoint=height*(2/3),pathData=[{command:"moveTo",points:[x,y]},{command:"bezierCurveTo",points:[x,y+yControlPoint,x+width,y+yControlPoint,x+width,y]}];return pathData},crossPlatformShapes.pathCalculator.arc=function(data){"use strict";var x=data.x,y=data.y,width=data.width,height=data.height,yControlPoint=height*(2/3),pathData=[{command:"moveTo",points:[x,y]},{command:"bezierCurveTo",points:[x,y+yControlPoint,x+width,y+yControlPoint,x+width,y]}];return pathData},crossPlatformShapes.pathCalculator.tBar=function(data){"use strict";var x=data.x,y=data.y,height=(data.width,data.height),pathData=[{command:"moveTo",points:[x,y]},{command:"lineTo",points:[x,y+height]}];return pathData},crossPlatformShapes.pathCalculator.arc=function(data){"use strict";var x=data.x,y=data.y,width=data.width,height=data.height,yControlPoint=height*(2/3),pathData=[{command:"moveTo",points:[x,y]},{command:"bezierCurveTo",points:[x,y+yControlPoint,x+width,y+yControlPoint,x+width,y]}];return pathData},crossPlatformShapes.pathCalculator.arc=function(data){"use strict";var x=data.x,y=data.y,width=data.width,height=data.height,yControlPoint=height*(2/3),pathData=[{command:"moveTo",points:[x,y]},{command:"bezierCurveTo",points:[x,y+yControlPoint,x+width,y+yControlPoint,x+width,y]}];return pathData},crossPlatformShapes.customShapes={arc:{href:"http://www.example.org/arc.png"},brace:{href:"http://www.example.org/brace.png"},rectangle:{href:"http://www.example.org/rectangle.png"}},crossPlatformShapes.svg={init:function(args,callback){{var viewport,defs,width=args.width||"100%",height=args.height||"100%",backgroundColor=args.backgroundColor||"#ffffff";this.crossPlatformShapesInstance}if("svg"!==this.targetTagName){var id=args.id||"cross-platform-shape-svg";targetImageSelection=this.targetSelection.append("svg").attr("id",id).attr("version","1.1").attr("baseProfile","full").attr("xmlns","http://www.w3.org/1999/xlink").attr("xmlns:xmlns:xlink","http://www.w3.org/1999/xlink").attr("xmlns:xmlns:ev","http://www.w3.org/2001/xml-events").attr("preserveAspectRatio","xMidYMid").attr("width",width).attr("height",height).attr("style","background-color:"+backgroundColor+"; "),this.path.targetImageSelection=this.image.targetImageSelection=targetImageSelection,defs=targetImageSelection.append("defs").attr("id","defs"),this.marker.targetImageSelectionDefs=defs,viewport=targetImageSelection.append("g").attr("id","viewport")}else targetImageSelection=this.targetImageSelection,this.path.targetImageSelection=this.image.targetImageSelection=targetImageSelection,this.marker.targetImageSelectionDefs=this.targetImageSelection.select("defs"),viewport=targetImageSelection.select("#viewport"),viewport[0][0]||(viewport=targetImageSelection.select("g"));this.path.availableMarkers=this.marker.availableMarkers={},this.path.backgroundColor=this.marker.backgroundColor=backgroundColor,targetImageSelection.attr("style","background-color:"+backgroundColor+"; "),callback&&callback(viewport)}},crossPlatformShapes.svg.image={render:function(shapeName,data,callback){var customShapes=this.customShapes,shapeSelection=targetImageSelection.select(data.containerSelector).append("image").attr("xlink:xlink:href",customShapes[shapeName].href).attr("x",data.x||0).attr("y",data.y||0).attr("width",data.width||0).attr("height",data.height||0),rotation=data.rotation;rotation&&shapeSelection.attr("transform","rotate("+rotation+","+(data.x+data.width/2)+","+(data.y+data.height/2)+")"),callback&&callback(shapeSelection[0][0])}},crossPlatformShapes.svg.marker={generateId:function(name,position,color){var id=("id-"+name+"-"+position+"-"+color).replace(/[^A-Za-z0-9-]/g,"").toLowerCase();return id},append:function(name,position,color,callback){var availableMarkers=this.availableMarkers,targetImageSelectionDefs=this.targetImageSelectionDefs,backgroundColor=this.backgroundColor,markerData={arrow:{markerElement:{markerWidth:12,markerHeight:12},shapes:[{elementTag:"rect",x:0,y:5.4,width:2,height:1.2,stroke:backgroundColor,fill:backgroundColor},{elementTag:"polygon",points:"12,11 0,6 12,1","stroke-width":0,fill:color}]},mimBinding:{markerElement:{markerWidth:12,markerHeight:12},shapes:[{elementTag:"rect",x:0,y:5.4,width:2,height:1.2,stroke:backgroundColor,fill:backgroundColor},{elementTag:"polygon",points:"12,12 0,6 12,0 5,6","stroke-width":0,fill:color}]},mimNecessaryStimulation:{markerElement:{markerWidth:16,markerHeight:12},shapes:[{elementTag:"rect",x:0,y:5.4,width:2,height:1.2,stroke:"none",fill:backgroundColor},{elementTag:"line",x1:14,y1:0,x2:14,y2:12,stroke:color,"stroke-width":1,fill:"none"},{elementTag:"line",x1:16,y1:6,x2:16,y2:6,stroke:"none",fill:"none"},{elementTag:"polygon",points:"0,6 9,11 9,1","stroke-width":1,stroke:color,fill:backgroundColor}]},mimStimulation:{markerElement:{markerWidth:12,markerHeight:12},shapes:[{elementTag:"rect",x:0,y:5.4,width:2,height:1.2,stroke:"none",fill:backgroundColor},{elementTag:"line",x1:12,y1:6,x2:12,y2:6,stroke:"none",fill:"none"},{elementTag:"polygon",points:"0,6 11,11 11,1","stroke-width":1,stroke:color,fill:backgroundColor}]},mimModification:{markerElement:{markerWidth:12,markerHeight:12},shapes:[{elementTag:"rect",x:0,y:5.4,width:2,height:1.2,stroke:backgroundColor,fill:backgroundColor},{elementTag:"polygon",points:"12,12 0,6 12,0 5,6","stroke-width":0,fill:color}]},mimCatalysis:{markerElement:{markerWidth:12,markerHeight:12},shapes:[{elementTag:"circle",cx:6,cy:6,r:"5.3px",stroke:color,"stroke-width":1,fill:backgroundColor}]},mimCleavage:{markerElement:{markerWidth:20,markerHeight:30},shapes:[{elementTag:"rect",x:0,y:14.3,width:18.4,height:1.4,stroke:backgroundColor,fill:backgroundColor},{elementTag:"line",stroke:color,"stroke-width":1,x1:18,y1:14.5,x2:18,y2:30},{elementTag:"line",stroke:color,"stroke-width":1,x1:18,y1:30,x2:0,y2:0}]},mimCovalentBond:{markerElement:{markerWidth:12,markerHeight:12},shapes:[{elementTag:"rect",x:0,y:0,width:0,height:0,stroke:backgroundColor,"stroke-width":0,fill:backgroundColor}]},mimTranscriptionTranslation:{markerElement:{markerWidth:20,markerHeight:24},shapes:[{elementTag:"rect",x:0,y:11,width:12,height:2,stroke:backgroundColor,fill:backgroundColor},{elementTag:"line",stroke:color,fill:"none","stroke-width":1,x1:15,y1:12,x2:15,y2:5},{elementTag:"line",stroke:color,fill:"none","stroke-width":1,x1:15.5,y1:5,x2:8,y2:5},{elementTag:"polygon",points:"0,5 8,1 8,9","stroke-width":1,stroke:color,fill:backgroundColor}]},mimGap:{markerElement:{markerWidth:12,markerHeight:12},shapes:[{elementTag:"rect",x:0,y:5.3,width:8,height:1.4,stroke:"none",fill:backgroundColor}]},mimBranchingLeft:{markerElement:{markerWidth:12,markerHeight:12},shapes:[{elementTag:"rect",x:.4,y:5.3,width:3.1,height:1.4,fill:backgroundColor,stroke:"none"},{elementTag:"line",fill:"none",stroke:color,"stroke-width":1,x1:3.9,y1:6.2,x2:.2,y2:0}]},mimBranchingRight:{markerElement:{markerWidth:12,markerHeight:12},shapes:[{elementTag:"rect",x:.4,y:5.3,width:3.1,height:1.4,fill:backgroundColor,stroke:"none"},{elementTag:"line",fill:"none",stroke:color,"stroke-width":1,x1:.2,y1:12,x2:3.9,y2:5.8}]},tBar:{markerElement:{markerWidth:10,markerHeight:20},shapes:[{elementTag:"rect",x:0,y:9,width:8,height:2,fill:backgroundColor},{elementTag:"line",x:0,y:0,width:12,height:12,stroke:color,"stroke-width":1.8,x1:7,y1:0,x2:7,y2:20}]}};if(markerData.mimInhibition=markerData.tBar,markerData.mimConversion=markerData.arrow,markerData[name]){var markerId=this.generateId(name,position,color),markerAttributeValue="url(#"+markerId+")";if(availableMarkers[markerId])callback(markerAttributeValue);else{var marker=targetImageSelectionDefs.append("marker").attr("id",markerId).attr("orient","auto").attr("markerUnits","strokeWidth").attr("preserveAspectRatio","none").attr("refY",markerData[name].markerElement.markerHeight/2).attr("viewBox","0 0 "+markerData[name].markerElement.markerWidth+" "+markerData[name].markerElement.markerHeight);d3.map(markerData[name].markerElement).entries().forEach(function(attribute){marker.attr(attribute.key,attribute.value)}),"end"===position?marker.attr("refX",markerData[name].markerElement.markerWidth):marker.attr("refX",0);var markerContainer=marker.append("g").attr("id","g-"+markerId);"end"===position&&markerContainer.attr("transform","rotate(180, "+markerData[name].markerElement.markerWidth/2+", "+markerData[name].markerElement.markerHeight/2+")"),markerData[name].shapes.forEach(function(shape){var shapeSelection=markerContainer.append(shape.elementTag);d3.map(shape).entries().forEach(function(attribute){"elementTag"!==attribute.key&&shapeSelection.attr(attribute.key,attribute.value)})}),availableMarkers[markerId]=!0,callback(markerAttributeValue)}}else console.warn('Marker (arrowhead) named "'+name+'" is not available.'),callback("none")}},crossPlatformShapes.svg.path={generateMarkerId:function(name,position,color){var id=("id-"+name+"-"+position+"-"+color).replace(/[^A-Za-z0-9-]/g,"").toLowerCase();return id},render:function(shapeName,data,callback){var targetImageSelection=this.targetImageSelection,crossPlatformShapesInstance=(this.availableMarkers,this.crossPlatformShapesInstance),attributeDependencyOrder=["color","markerStart","markerEnd"],canvasPathCommandToSvgPathCommandMappings={moveTo:"M",lineTo:"L",closePath:"Z",bezierCurveTo:"C",quadraticCurveTo:"Q"},shapeSelection=targetImageSelection.select(data.containerSelector).append("path"),shapesUsingD3PathGenerators=["lineCurved","lineElbow","lineSegmented"],d="";if(-1===shapesUsingD3PathGenerators.indexOf(shapeName)){var pathSegments=crossPlatformShapes.pathCalculator[shapeName](data);pathSegments.forEach(function(pathSegment){d+=canvasPathCommandToSvgPathCommandMappings[pathSegment.command],d+=pathSegment.points.join(",")})}else d=crossPlatformShapes.pathCalculator[shapeName](data);shapeSelection.attr("d",d);var backgroundColor=data.backgroundColor||"transparent";shapeSelection.attr("fill",backgroundColor);var color,attributeListItemName,attributeListItemValue,svgPathAttributeGenerator={id:function(idValue){shapeSelection.attr("id",idValue)},strokeDasharray:function(strokeDasharrayValue){shapeSelection.attr("stroke-dasharray",strokeDasharrayValue)},fillOpacity:function(fillOpacityValue){shapeSelection.attr("fill-opacity",fillOpacityValue)},color:function(colorValue){color=colorValue,shapeSelection.attr("stroke",colorValue)},markerStart:function(markerStartValue){crossPlatformShapesInstance.svg.marker.append(markerStartValue,"start",color,function(markerAttributeValue){shapeSelection.attr("marker-start",markerAttributeValue)})},markerEnd:function(markerEndValue){crossPlatformShapesInstance.svg.marker.append(markerEndValue,"end",color,function(markerAttributeValue){shapeSelection.attr("marker-end",markerAttributeValue)})},rotation:function(rotationValue){var transform="rotate("+rotationValue+","+(data.x+data.width/2)+","+(data.y+data.height/2)+")";shapeSelection.attr("transform",transform)},borderWidth:function(borderWidthValue){shapeSelection.attr("stroke-width",borderWidthValue)}},attributeList=d3.map(data).entries().sort(function(a,b){return attributeDependencyOrder.indexOf(a.key)-attributeDependencyOrder.indexOf(b.key)});attributeList.forEach(function(attributeListItem){attributeListItemName=attributeListItem.key,attributeListItemValue=attributeListItem.value,svgPathAttributeGenerator.hasOwnProperty(attributeListItemName)&&svgPathAttributeGenerator[attributeListItemName](attributeListItemValue)}),callback&&callback(shapeSelection[0][0])}},crossPlatformShapes.canvas={};